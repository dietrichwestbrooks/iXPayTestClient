<UserControl x:Class="Wayne.Payment.Tools.iXPayTestClient.Modules.Platform.Views.DeviceListView"
             xmlns="http://schemas.microsoft.com/netfx/2009/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:metro="http://metro.mahapps.com/winfx/xaml/controls"
             xmlns:prism="http://prismlibrary.com/"
             xmlns:ixpay="http://schemas.wayne.com/xaml/ixpay"
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             xmlns:local="clr-namespace:Wayne.Payment.Tools.iXPayTestClient.Modules.Platform.Views"
             xmlns:cm="clr-namespace:System.ComponentModel;assembly=WindowsBase"
             mc:Ignorable="d" 
             d:DesignHeight="300" d:DesignWidth="300">
    <Grid>
        <Grid.Resources>
            <CollectionViewSource x:Key="Devices" Source="{Binding Path=Devices}" >
                <CollectionViewSource.SortDescriptions>
                    <cm:SortDescription PropertyName="Name" />
                </CollectionViewSource.SortDescriptions>
            </CollectionViewSource>
        </Grid.Resources>
        <DockPanel LastChildFill="True">
            <ToolBarTray DockPanel.Dock="Top">
                <ToolBar Padding="5,0">
                    <metro:SplitButton Margin="5,0,0,0" 
                                       ItemsSource="{Binding Source={ixpay:Enumeration {x:Type local:FilterOption}}}"   
                                       SelectedValuePath="Value"
                                       SelectedValue="{Binding FilterOption}"
                                       DisplayMemberPath="Description"
                                       HorizontalAlignment="Center"
                                       HorizontalContentAlignment="Left"
                                       VerticalContentAlignment="Center"
                                       VerticalAlignment="Center"
                                       SelectedIndex="1" 
                                       Orientation="Horizontal" />
                </ToolBar>
            </ToolBarTray>
            <TreeView x:Name="_devices" ItemsSource="{Binding Source={StaticResource Devices}}">
                <TreeView.Resources>
                    <HierarchicalDataTemplate ItemsSource="{Binding Members}" DataType="{x:Type local:DeviceViewModel}">
                        <TextBlock Text="{Binding Title}" />
                    </HierarchicalDataTemplate>
                    <HierarchicalDataTemplate ItemsSource="{Binding Commands}" DataType="{x:Type local:DevicePropertyViewModel}">
                        <StackPanel Orientation="Horizontal">
                            <Image Height="10" Source="{DynamicResource propertyImageSource}" />
                            <TextBlock Margin="5 0 0 0" Text="{Binding Title}" />
                        </StackPanel>
                    </HierarchicalDataTemplate>
                    <HierarchicalDataTemplate ItemsSource="{Binding Commands}" DataType="{x:Type local:DeviceMethodViewModel}">
                        <StackPanel Orientation="Horizontal">
                            <Image Height="10" Source="{DynamicResource methodImageSource}" />
                            <TextBlock Margin="5 0 0 0" Text="{Binding Title}" />
                        </StackPanel>
                    </HierarchicalDataTemplate>
                    <DataTemplate DataType="{x:Type local:DeviceEventViewModel}">
                        <StackPanel Orientation="Horizontal">
                            <Image Height="10" Source="{DynamicResource lightningIconImageSource}" />
                            <TextBlock Margin="5 0 0 0" Text="{Binding Title}" />
                        </StackPanel>
                    </DataTemplate>
                    <DataTemplate DataType="{x:Type local:DeviceCommandViewModel}">
                        <StackPanel Orientation="Horizontal">
                            <Image Height="10">
                                <Image.Style>
                                    <Style TargetType="{x:Type Image}">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding InvokeType}" Value="{x:Static local:DeviceCommandInvokeType.Get}">
                                                <Setter Property="Source" Value="{DynamicResource mailGetIconImageSource}" />
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding InvokeType}" Value="{x:Static local:DeviceCommandInvokeType.Set}">
                                                <Setter Property="Source" Value="{DynamicResource mailSendIconImageSource}" />
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding InvokeType}" Value="{x:Static local:DeviceCommandInvokeType.Invoke}">
                                                <Setter Property="Source" Value="{DynamicResource mail2SendIconImageSource}" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Image.Style>
                            </Image>
                            <TextBlock Margin="5 0 0 0" Text="{Binding Title}" />
                        </StackPanel>
                    </DataTemplate>
                </TreeView.Resources>
                <TreeView.ItemContainerStyle>
                    <Style BasedOn="{StaticResource MetroTreeViewItem}" TargetType="{x:Type TreeViewItem}">
                        <Style.Triggers>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding Converter={StaticResource ObjectToTypeConverter}}" Value="{x:Type local:DevicePropertyViewModel}" />
                                    <Condition Binding="{Binding RelativeSource={RelativeSource AncestorType=TreeView, Mode=FindAncestor}, Path=DataContext.FilterOption}" Value="{x:Static local:FilterOption.OnlyMethods}" />
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Visibility" Value="Collapsed" />
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding Converter={StaticResource ObjectToTypeConverter}}" Value="{x:Type local:DeviceMethodViewModel}" />
                                    <Condition Binding="{Binding RelativeSource={RelativeSource AncestorType=TreeView, Mode=FindAncestor}, Path=DataContext.FilterOption}" Value="{x:Static local:FilterOption.OnlyProperties}" />
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Visibility" Value="Collapsed" />
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding Converter={StaticResource ObjectToTypeConverter}}" Value="{x:Type local:DeviceEventViewModel}"  />
                                    <Condition Binding="{Binding RelativeSource={RelativeSource AncestorType=TreeView, Mode=FindAncestor}, Path=DataContext.FilterOption}" Value="{x:Static local:FilterOption.OnlyProperties}" />
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Visibility" Value="Collapsed" />
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding Converter={StaticResource ObjectToTypeConverter}}" Value="{x:Type local:DeviceEventViewModel}"  />
                                    <Condition Binding="{Binding RelativeSource={RelativeSource AncestorType=TreeView, Mode=FindAncestor}, Path=DataContext.FilterOption}" Value="{x:Static local:FilterOption.OnlyMethods}" />
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Visibility" Value="Collapsed" />
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding Converter={StaticResource ObjectToTypeConverter}}" Value="{x:Type local:DeviceEventViewModel}"  />
                                    <Condition Binding="{Binding RelativeSource={RelativeSource AncestorType=TreeView, Mode=FindAncestor}, Path=DataContext.FilterOption}" Value="{x:Static local:FilterOption.HideEvents}" />
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Visibility" Value="Collapsed" />
                            </MultiDataTrigger>
                        </Style.Triggers>
                    </Style>
                </TreeView.ItemContainerStyle>
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="SelectedItemChanged">
                        <i:InvokeCommandAction Command="{Binding SelectedObjectChangedCommand}" CommandParameter="{Binding ElementName=_devices, Path=SelectedItem}" />
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </TreeView>
        </DockPanel>
    </Grid>
</UserControl>
